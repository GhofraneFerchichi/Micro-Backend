trigger:
  branches:
    include:
      - master

pr:
  branches:
    include:
      - master

resources:
  repositories:
    - repository: self
      type: github
      name: GhofraneFerchichi/Micro-Backend
      endpoint: GitHubConnection

pool:
  name: Default

variables:
  dockerRegistryServiceConnection: 'DockerHubConnection'
  imageRepository: 'ghofraneferchichi/microcommm'
  tag: '$(Build.BuildId)'

steps:
  - task: Maven@3
    displayName: 'Run Unit Tests'
    inputs:
      mavenPomFile: '$(Build.SourcesDirectory)/Micro-Backend/microservice-commandes/pom.xml'
      goals: 'test'
      options: '-Dmaven.test.failure.ignore=true'

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      testResultsFormat: 'JUnit'
      failTaskOnFailedTests: true

  - task: Docker@2
    displayName: Build and Push Docker image
    inputs:
      command: buildAndPush
      dockerfile: '$(Build.SourcesDirectory)/DockerfileCommandes'
      containerRegistry: '$(dockerRegistryServiceConnection)'
      repository: '$(imageRepository)'
      tags: $(tag)

  - script: |
      echo "Listing contents of $(Build.SourcesDirectory)/my-chart/templates"
      dir "$(Build.SourcesDirectory)/my-chart/templates"
    displayName: 'List Directory Contents'

  - task: PowerShell@2
    displayName: Update Deployment YAML for commandes
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "Updating Deployment YAML file with new image tag"
        $yamlPath = "$(Build.SourcesDirectory)/my-chart/templates/deployment.yaml"
        Write-Host "YAML Path: $yamlPath"
        $content = Get-Content $yamlPath -Raw
        $content = $content -replace 'image: ghofraneferchichi/microcommm:.+', "image: ghofraneferchichi/microcommm:$(Build.BuildId)"
        $content | Set-Content $yamlPath

  - task: PowerShell@2
    displayName: Commit and push updated Deployment YAML files
    inputs:
      targetType: 'inline'
      script: |
        git config --global user.email "ghofranefer01@gmail.com"
        git config --global user.name "GhofraneFerchichi"
        cd "$(Build.SourcesDirectory)/my-chart/templates"
        git stash  # Stash any local changes
        git checkout master  # Ensure you are on the correct branch
        git pull origin master  # Pull latest changes
        git stash pop  # Apply stashed changes
        git add deployment.yaml
        git commit -m "Update Docker image tag to $(Build.BuildId) in panier deployment YAML file"
        git pull --rebase origin master  # Rebase changes on top of the latest changes
        git push origin master  # Push changes back to the repository
